version: '3.9'

services:
  web:
    build:
      context: .
      dockerfile: api/Dockerfile
    env_file:
      - api/.env
    restart: always
    ports:
      - 8000:8000
    volumes:
      - ./api:/app/api
    depends_on:
      redis: 
        condition: service_healthy
      db:
        condition: service_healthy
  
  script:
    build:
      context: .
      dockerfile: scheduler/Dockerfile
    volumes:
      - ./scheduler:/app/scheduler
    depends_on:
      web:
        condition: service_started
    restart: always
    env_file:
      - scheduler/.env
  
  db:
    image: postgres:16
    env_file:
      - api/.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d postgres"]
      interval: 10s
      timeout: 5s
      retries: 1

  redis:
    image: redis:6.2
    env_file:
      - api/.env
    volumes:
      - redis_data:/data
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  redis_data:
